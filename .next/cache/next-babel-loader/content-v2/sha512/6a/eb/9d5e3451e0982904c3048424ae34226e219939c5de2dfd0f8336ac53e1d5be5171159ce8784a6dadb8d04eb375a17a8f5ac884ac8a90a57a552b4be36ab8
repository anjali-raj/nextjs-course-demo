{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/anjali/Documents/Anjali/React_Tutorial/Project_Eighteen(Next.js-1)/pages/index.js\";\nimport { Fragment } from 'react';\nimport Head from 'next/head';\nimport { MongoClient } from 'mongodb';\nimport MeetupList from '../components/meetups/MeetupList';\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Head, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 8\n  }, this);\n}\n\n; // export async function getServerSideProps(context) {\n//     const req = context.req;\n//     const res = context.res;\n//     //Fetch Data from an API\n//     return {\n//         props: {\n//           meetups: DUMMY_MEETUPS,\n//         }\n//     };\n// };\n\nexport async function getStaticProps() {\n  //Fetch Data from an API\n  const client = await MongoClient.connect('mongodb+srv://anjali-raj:Anjali1110@cluster0.tgz2j.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map()(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    revalidate: 10\n  };\n}\n;\nexport default HomePage;","map":{"version":3,"sources":["/Users/anjali/Documents/Anjali/React_Tutorial/Project_Eighteen(Next.js-1)/pages/index.js"],"names":["Fragment","Head","MongoClient","MeetupList","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","title","address","image","id","_id","toString","revalidate"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,OAAOC,UAAP,MAAuB,kCAAvB;;AAIA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACtB,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOF;;AAAA,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,eAAeC,cAAf,GAAgC;AACnC;AACA,QAAMC,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CAAoB,oGAApB,CAArB;AAEA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AAEA,SAAO;AACHV,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,GAAcC,MAAM,KAAK;AAC9BC,QAAAA,KAAK,EAAGD,MAAM,CAACC,KADe;AAE9BC,QAAAA,OAAO,EAAGF,MAAM,CAACE,OAFa;AAG9BC,QAAAA,KAAK,EAAGH,MAAM,CAACG,KAHe;AAI9BC,QAAAA,EAAE,EAAGJ,MAAM,CAACK,GAAP,CAAWC,QAAX;AAJyB,OAAL,CAApB;AADJ,KADJ;AASHC,IAAAA,UAAU,EAAE;AATT,GAAP;AAWH;AAAA;AAED,eAAepB,QAAf","sourcesContent":["import { Fragment } from 'react';\nimport Head from 'next/head';\nimport { MongoClient } from 'mongodb';\nimport MeetupList from '../components/meetups/MeetupList';\n\n\n\nfunction HomePage(props) {\n   return (\n       <Fragment>\n           <MeetupList meetups={props.meetups} />\n           <Head></Head>\n       </Fragment>\n     \n   );\n};\n\n// export async function getServerSideProps(context) {\n//     const req = context.req;\n//     const res = context.res;\n//     //Fetch Data from an API\n//     return {\n//         props: {\n//           meetups: DUMMY_MEETUPS,\n//         }\n//     };\n// };\n\nexport async function getStaticProps() {\n    //Fetch Data from an API\n    const client = await MongoClient.connect('mongodb+srv://anjali-raj:Anjali1110@cluster0.tgz2j.mongodb.net/meetups?retryWrites=true&w=majority');\n    \n    const db = client.db(); \n\n    const meetupsCollection = db.collection('meetups');\n\n    const meetups = await meetupsCollection.find().toArray();\n\n    client.close();\n       \n    return {\n        props: {\n          meetups: meetups.map()(meetup => ({\n              title : meetup.title,\n              address : meetup.address,\n              image : meetup.image,\n              id : meetup._id.toString()\n          })),\n        },\n        revalidate: 10\n    };\n};\n\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}